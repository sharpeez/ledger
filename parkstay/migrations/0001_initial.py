# -*- coding: utf-8 -*-
# Generated by Django 1.9.10 on 2016-10-25 08:07
from __future__ import unicode_literals

import datetime
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
    ]

    operations = [
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.IntegerField(unique=True)),
                ('legacy_name', models.CharField(blank=True, max_length=255)),
                ('arrival', models.DateField()),
                ('departure', models.DateField()),
                ('details', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('cost_total', models.DecimalField(decimal_places=2, default='0.00', max_digits=8)),
            ],
        ),
        migrations.CreateModel(
            name='BookingRange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_days', models.SmallIntegerField(default=1)),
                ('max_days', models.SmallIntegerField(default=28)),
                ('min_sites', models.SmallIntegerField(default=1)),
                ('max_sites', models.SmallIntegerField(default=12)),
                ('min_dba', models.SmallIntegerField(default=0)),
                ('max_dba', models.SmallIntegerField(default=180)),
                ('status', models.SmallIntegerField(choices=[(0, 'Open'), (1, 'Closed due to natural disaster'), (2, 'Closed for maintenance')], default=0)),
                ('details', models.TextField()),
                ('range_start', models.DateTimeField(blank=True, null=True)),
                ('range_end', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Campground',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True)),
                ('ratis_id', models.IntegerField(default=-1)),
                ('campground_type', models.SmallIntegerField(choices=[(0, 'Campground: no bookings'), (1, 'Campground: book online'), (2, 'Campground: book by phone'), (3, 'Other accomodation'), (4, 'Not Published')], default=0)),
                ('site_type', models.SmallIntegerField(choices=[(0, 'Unnumbered Site'), (1, 'Numbered site')], default=0)),
                ('address', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('area_activities', models.TextField(blank=True, null=True)),
                ('driving_directions', models.TextField(blank=True, null=True)),
                ('fees', models.TextField(blank=True, null=True)),
                ('othertransport', models.TextField(blank=True, null=True)),
                ('key', models.CharField(blank=True, max_length=255, null=True)),
                ('wkb_geometry', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('bookable_per_site', models.BooleanField(default=False)),
                ('dog_permitted', models.BooleanField(default=False)),
                ('check_in', models.TimeField(default=datetime.time(14, 0))),
                ('check_out', models.TimeField(default=datetime.time(10, 0))),
            ],
        ),
        migrations.CreateModel(
            name='Campsite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('wkb_geometry', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('campground', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='parkstay.Campground')),
            ],
        ),
        migrations.CreateModel(
            name='CampsiteBooking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True)),
                ('booking_type', models.SmallIntegerField(choices=[(0, 'Reception booking'), (1, 'Internet booking'), (2, 'Black booking')], default=0)),
                ('booking', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='parkstay.Booking')),
                ('campsite', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='parkstay.Campsite')),
            ],
        ),
        migrations.CreateModel(
            name='CampsiteClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('tents', models.SmallIntegerField(default=0)),
                ('parking_spaces', models.SmallIntegerField(choices=[(0, 'Parking within site.'), (1, 'Parking for exclusive use of site occupiers next to site, but separated from tent space.'), (2, 'Parking for exclusive use of occupiers, short walk from tent space.'), (3, 'Shared parking (not allocated), short walk from tent space.')], default=0)),
                ('number_vehicles', models.SmallIntegerField(choices=[(0, 'One vehicle'), (1, 'Two vehicles'), (2, 'One vehicle + small trailer'), (3, 'One vehicle + small trailer/large vehicle')], default=0)),
                ('min_people', models.SmallIntegerField(default=1)),
                ('max_people', models.SmallIntegerField(default=12)),
                ('dimensions', models.CharField(default='6x4', max_length=12)),
                ('camp_unit_suitability', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='CampsiteRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allow_public_holidays', models.BooleanField(default=True)),
                ('date_start', models.DateField(default=datetime.date.today)),
                ('date_end', models.DateField(blank=True, null=True)),
                ('rate_type', models.SmallIntegerField(choices=[(0, 'Standard'), (1, 'Discounted')], default=0)),
                ('price_model', models.SmallIntegerField(choices=[(0, 'Price per Person'), (1, 'Fixed Price')], default=0)),
                ('campsite', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='parkstay.Campsite')),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('phone_number', models.CharField(max_length=12)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(max_length=255)),
                ('description', models.TextField()),
                ('opening_hours', models.TextField()),
                ('other_services', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('abbreviation', models.CharField(max_length=16, null=True, unique=True)),
                ('ratis_id', models.IntegerField(default=-1)),
            ],
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(null=True)),
                ('image', models.ImageField(null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Park',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('ratis_id', models.IntegerField(default=-1)),
                ('entry_fee_required', models.BooleanField(default=True)),
                ('district', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='parkstay.District')),
            ],
        ),
        migrations.CreateModel(
            name='PromoArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Rate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adult', models.DecimalField(decimal_places=2, default='10.00', max_digits=8)),
                ('concession', models.DecimalField(decimal_places=2, default='6.60', max_digits=8)),
                ('child', models.DecimalField(decimal_places=2, default='2.20', max_digits=8)),
                ('infant', models.DecimalField(decimal_places=2, default='0', max_digits=8)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('abbreviation', models.CharField(max_length=16, null=True, unique=True)),
                ('ratis_id', models.IntegerField(default=-1)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='rate',
            unique_together=set([('adult', 'concession', 'child', 'infant')]),
        ),
        migrations.AddField(
            model_name='district',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='parkstay.Region'),
        ),
        migrations.AddField(
            model_name='campsiterate',
            name='rate',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='parkstay.Rate'),
        ),
        migrations.AddField(
            model_name='campsite',
            name='campsite_class',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='parkstay.CampsiteClass'),
        ),
        migrations.AddField(
            model_name='campsite',
            name='features',
            field=models.ManyToManyField(to='parkstay.Feature'),
        ),
        migrations.AddField(
            model_name='campground',
            name='contact',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='parkstay.Contact'),
        ),
        migrations.AddField(
            model_name='campground',
            name='customer_contact',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='parkstay.CustomerContact'),
        ),
        migrations.AddField(
            model_name='campground',
            name='features',
            field=models.ManyToManyField(to='parkstay.Feature'),
        ),
        migrations.AddField(
            model_name='campground',
            name='park',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='parkstay.Park'),
        ),
        migrations.AddField(
            model_name='campground',
            name='promo_area',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='parkstay.PromoArea'),
        ),
        migrations.AddField(
            model_name='campground',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='bookingrange',
            name='campground',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='parkstay.Campground'),
        ),
        migrations.AddField(
            model_name='booking',
            name='campground',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='parkstay.Campground'),
        ),
        migrations.AlterUniqueTogether(
            name='park',
            unique_together=set([('name',)]),
        ),
        migrations.AlterUniqueTogether(
            name='campsiterate',
            unique_together=set([('campsite', 'rate')]),
        ),
        migrations.AlterUniqueTogether(
            name='campsitebooking',
            unique_together=set([('campsite', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='campsite',
            unique_together=set([('campground', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='campground',
            unique_together=set([('name', 'park')]),
        ),
    ]
